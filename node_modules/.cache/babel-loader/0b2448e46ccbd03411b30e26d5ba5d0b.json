{"ast":null,"code":"import _toConsumableArray from \"/home/shivam/Documents/node_js_assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _s = $RefreshSig$();\nvar range = function range(start, end) {\n  var length = end - start + 1;\n  return Array.from({\n    length: length\n  }, function (_, idx) {\n    return idx + start;\n  });\n};\nexport var usePagination = function usePagination(_ref) {\n  _s();\n  var totalCount = _ref.totalCount,\n    pageSize = _ref.pageSize,\n    _ref$siblingCount = _ref.siblingCount,\n    siblingCount = _ref$siblingCount === void 0 ? 1 : _ref$siblingCount,\n    currentPage = _ref.currentPage;\n  var paginationRange = useMemo(function () {\n    var totalPageCount = Math.ceil(totalCount / pageSize);\n    var totalPageNumbers = siblingCount + 5;\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n    var leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    var rightSiblingIndex = Math.min(currentPage + siblingCount, totalPageCount);\n    var shouldShowLeftDots = leftSiblingIndex > 2;\n    var shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n    var firstPageIndex = 1;\n    var lastPageIndex = totalPageCount;\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      var leftItemCount = 3 + 2 * siblingCount;\n      var leftRange = range(1, leftItemCount);\n      return [].concat(_toConsumableArray(leftRange), [DOTS, totalPageCount]);\n    }\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      var rightItemCount = 3 + 2 * siblingCount;\n      var rightRange = range(totalPageCount - rightItemCount + 1, totalPageCount);\n      return [firstPageIndex, DOTS].concat(_toConsumableArray(rightRange));\n    }\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      var middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS].concat(_toConsumableArray(middleRange), [DOTS, lastPageIndex]);\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n  return paginationRange;\n};\n_s(usePagination, \"tLviJI6rwkyze3+kNwkFLwjvB48=\");","map":{"version":3,"names":["range","start","end","length","Array","from","_","idx","usePagination","totalCount","pageSize","siblingCount","currentPage","paginationRange","useMemo","totalPageCount","Math","ceil","totalPageNumbers","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftItemCount","leftRange","DOTS","rightItemCount","rightRange","middleRange"],"sources":["/home/shivam/Documents/node_js_assignment/src/usePagination.js"],"sourcesContent":["const range = (start, end) => {\n    let length = end - start + 1;\n    return Array.from({ length }, (_, idx) => idx + start);\n  };\n  export const usePagination = ({\n    totalCount,\n    pageSize,\n    siblingCount = 1,\n    currentPage\n  }) => {\n    const paginationRange = useMemo(() => {\n      const totalPageCount = Math.ceil(totalCount / pageSize);\n  \n      const totalPageNumbers = siblingCount + 5;\n      if (totalPageNumbers >= totalPageCount) {\n        return range(1, totalPageCount);\n      }\n      \n      const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n      const rightSiblingIndex = Math.min(\n        currentPage + siblingCount,\n        totalPageCount\n      );\n  \n      const shouldShowLeftDots = leftSiblingIndex > 2;\n      const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n  \n      const firstPageIndex = 1;\n      const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n        let leftItemCount = 3 + 2 * siblingCount;\n        let leftRange = range(1, leftItemCount);\n  \n        return [...leftRange, DOTS, totalPageCount];\n      }\n  \n      if (shouldShowLeftDots && !shouldShowRightDots) {\n        \n        let rightItemCount = 3 + 2 * siblingCount;\n        let rightRange = range(\n          totalPageCount - rightItemCount + 1,\n          totalPageCount\n        );\n        return [firstPageIndex, DOTS, ...rightRange];\n      }\n       \n      \n      if (shouldShowLeftDots && shouldShowRightDots) {\n        let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n        return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n      }\n    }, [totalCount, pageSize, siblingCount, currentPage]);\n  \n    return paginationRange;\n  };"],"mappings":";;AAAA,IAAMA,KAAK,GAAG,SAARA,KAAK,CAAIC,KAAK,EAAEC,GAAG,EAAK;EAC1B,IAAIC,MAAM,GAAGD,GAAG,GAAGD,KAAK,GAAG,CAAC;EAC5B,OAAOG,KAAK,CAACC,IAAI,CAAC;IAAEF,MAAM,EAANA;EAAO,CAAC,EAAE,UAACG,CAAC,EAAEC,GAAG;IAAA,OAAKA,GAAG,GAAGN,KAAK;EAAA,EAAC;AACxD,CAAC;AACD,OAAO,IAAMO,aAAa,GAAG,SAAhBA,aAAa,OAKpB;EAAA;EAAA,IAJJC,UAAU,QAAVA,UAAU;IACVC,QAAQ,QAARA,QAAQ;IAAA,yBACRC,YAAY;IAAZA,YAAY,kCAAG,CAAC;IAChBC,WAAW,QAAXA,WAAW;EAEX,IAAMC,eAAe,GAAGC,OAAO,CAAC,YAAM;IACpC,IAAMC,cAAc,GAAGC,IAAI,CAACC,IAAI,CAACR,UAAU,GAAGC,QAAQ,CAAC;IAEvD,IAAMQ,gBAAgB,GAAGP,YAAY,GAAG,CAAC;IACzC,IAAIO,gBAAgB,IAAIH,cAAc,EAAE;MACtC,OAAOf,KAAK,CAAC,CAAC,EAAEe,cAAc,CAAC;IACjC;IAEA,IAAMI,gBAAgB,GAAGH,IAAI,CAACI,GAAG,CAACR,WAAW,GAAGD,YAAY,EAAE,CAAC,CAAC;IAChE,IAAMU,iBAAiB,GAAGL,IAAI,CAACM,GAAG,CAChCV,WAAW,GAAGD,YAAY,EAC1BI,cAAc,CACf;IAED,IAAMQ,kBAAkB,GAAGJ,gBAAgB,GAAG,CAAC;IAC/C,IAAMK,mBAAmB,GAAGH,iBAAiB,GAAGN,cAAc,GAAG,CAAC;IAElE,IAAMU,cAAc,GAAG,CAAC;IACxB,IAAMC,aAAa,GAAGX,cAAc;IAEtC,IAAI,CAACQ,kBAAkB,IAAIC,mBAAmB,EAAE;MAC5C,IAAIG,aAAa,GAAG,CAAC,GAAG,CAAC,GAAGhB,YAAY;MACxC,IAAIiB,SAAS,GAAG5B,KAAK,CAAC,CAAC,EAAE2B,aAAa,CAAC;MAEvC,oCAAWC,SAAS,IAAEC,IAAI,EAAEd,cAAc;IAC5C;IAEA,IAAIQ,kBAAkB,IAAI,CAACC,mBAAmB,EAAE;MAE9C,IAAIM,cAAc,GAAG,CAAC,GAAG,CAAC,GAAGnB,YAAY;MACzC,IAAIoB,UAAU,GAAG/B,KAAK,CACpBe,cAAc,GAAGe,cAAc,GAAG,CAAC,EACnCf,cAAc,CACf;MACD,QAAQU,cAAc,EAAEI,IAAI,4BAAKE,UAAU;IAC7C;IAGA,IAAIR,kBAAkB,IAAIC,mBAAmB,EAAE;MAC7C,IAAIQ,WAAW,GAAGhC,KAAK,CAACmB,gBAAgB,EAAEE,iBAAiB,CAAC;MAC5D,QAAQI,cAAc,EAAEI,IAAI,4BAAKG,WAAW,IAAEH,IAAI,EAAEH,aAAa;IACnE;EACF,CAAC,EAAE,CAACjB,UAAU,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,WAAW,CAAC,CAAC;EAErD,OAAOC,eAAe;AACxB,CAAC;AAAC,GAnDWL,aAAa"},"metadata":{},"sourceType":"module"}